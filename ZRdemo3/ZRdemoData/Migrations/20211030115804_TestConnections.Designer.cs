// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZRdemoData.Models;

namespace ZRdemoData.Migrations
{
    [DbContext(typeof(ZRdemoContext))]
    [Migration("20211030115804_TestConnections")]
    partial class TestConnections
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoachTrainingDay", b =>
                {
                    b.Property<int>("CoachesCoachId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingDaysId")
                        .HasColumnType("int");

                    b.HasKey("CoachesCoachId", "TrainingDaysId");

                    b.HasIndex("TrainingDaysId");

                    b.ToTable("CoachTrainingDay");
                });

            modelBuilder.Entity("GroupOfStudentsTrainingDay", b =>
                {
                    b.Property<int>("GroupOfStudentsId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingDaysId")
                        .HasColumnType("int");

                    b.HasKey("GroupOfStudentsId", "TrainingDaysId");

                    b.HasIndex("TrainingDaysId");

                    b.ToTable("GroupOfStudentsTrainingDay");
                });

            modelBuilder.Entity("GuestTraining", b =>
                {
                    b.Property<int>("GuestsId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingsId")
                        .HasColumnType("int");

                    b.HasKey("GuestsId", "TrainingsId");

                    b.HasIndex("TrainingsId");

                    b.ToTable("GuestTraining");
                });

            modelBuilder.Entity("GymTrainingDay", b =>
                {
                    b.Property<int>("GymsId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingDaysId")
                        .HasColumnType("int");

                    b.HasKey("GymsId", "TrainingDaysId");

                    b.HasIndex("TrainingDaysId");

                    b.ToTable("GymTrainingDay");
                });

            modelBuilder.Entity("ZRdemoData.Models.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoachId");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("ZRdemoData.Models.GroupOfStudents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupOfStudents");
                });

            modelBuilder.Entity("ZRdemoData.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("ZRdemoData.Models.GuestCoach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Belt")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GuestCoaches");
                });

            modelBuilder.Entity("ZRdemoData.Models.Gym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("ZRdemoData.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Belt")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("GroupOfStudentsId")
                        .HasColumnType("int");

                    b.Property<bool>("Injury")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("GroupOfStudentsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ZRdemoData.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("GroupOfStudentsId")
                        .HasColumnType("int");

                    b.Property<int?>("GuestCoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingDayId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfTraining")
                        .HasColumnType("int");

                    b.Property<int>("Uniform")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("GroupOfStudentsId");

                    b.HasIndex("GuestCoachId");

                    b.HasIndex("TrainingDayId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("ZRdemoData.Models.TrainingDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int?>("GuestCoachId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHolliday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GuestCoachId");

                    b.ToTable("TrainingDays");
                });

            modelBuilder.Entity("CoachTrainingDay", b =>
                {
                    b.HasOne("ZRdemoData.Models.Coach", null)
                        .WithMany()
                        .HasForeignKey("CoachesCoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZRdemoData.Models.TrainingDay", null)
                        .WithMany()
                        .HasForeignKey("TrainingDaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroupOfStudentsTrainingDay", b =>
                {
                    b.HasOne("ZRdemoData.Models.GroupOfStudents", null)
                        .WithMany()
                        .HasForeignKey("GroupOfStudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZRdemoData.Models.TrainingDay", null)
                        .WithMany()
                        .HasForeignKey("TrainingDaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GuestTraining", b =>
                {
                    b.HasOne("ZRdemoData.Models.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZRdemoData.Models.Training", null)
                        .WithMany()
                        .HasForeignKey("TrainingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymTrainingDay", b =>
                {
                    b.HasOne("ZRdemoData.Models.Gym", null)
                        .WithMany()
                        .HasForeignKey("GymsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZRdemoData.Models.TrainingDay", null)
                        .WithMany()
                        .HasForeignKey("TrainingDaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZRdemoData.Models.Student", b =>
                {
                    b.HasOne("ZRdemoData.Models.GroupOfStudents", "GroupOfStudents")
                        .WithMany("Students")
                        .HasForeignKey("GroupOfStudentsId");

                    b.Navigation("GroupOfStudents");
                });

            modelBuilder.Entity("ZRdemoData.Models.Training", b =>
                {
                    b.HasOne("ZRdemoData.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZRdemoData.Models.GroupOfStudents", "GroupOfStudents")
                        .WithMany()
                        .HasForeignKey("GroupOfStudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZRdemoData.Models.GuestCoach", "GuestCoach")
                        .WithMany()
                        .HasForeignKey("GuestCoachId");

                    b.HasOne("ZRdemoData.Models.TrainingDay", "TrainingDay")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainingDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("GroupOfStudents");

                    b.Navigation("GuestCoach");

                    b.Navigation("TrainingDay");
                });

            modelBuilder.Entity("ZRdemoData.Models.TrainingDay", b =>
                {
                    b.HasOne("ZRdemoData.Models.GuestCoach", null)
                        .WithMany("TrainingDays")
                        .HasForeignKey("GuestCoachId");
                });

            modelBuilder.Entity("ZRdemoData.Models.GroupOfStudents", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("ZRdemoData.Models.GuestCoach", b =>
                {
                    b.Navigation("TrainingDays");
                });

            modelBuilder.Entity("ZRdemoData.Models.TrainingDay", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
